{
  "title": "System Settings",
  "subtitle": "Manage all system settings in one place",
  "configure": "Configure",
  "refreshSuccess": "Settings updated successfully",
  "refreshError": "Error refreshing settings",
  "status": {
    "healthy": "System running normally",
    "issues": "System has issues",
    "lastCheck": "Last check",
    "issuesCount": "issues",
    "active": "Active",
    "warning": "Disabled",
    "error": "Error",
    "disabled": "Disabled"
  },
  "quickStats": {
    "title": "Quick Stats",
    "uptime": "Uptime",
    "databases": "Connected Databases",
    "activeIntegrations": "Active Integrations",
    "lastBackup": "Last Backup"
  },
  "stats": {
    "configured": "Configured",
    "lastUpdate": "Last Update",
    "events": "Events",
    "retention": "Retention",
    "rules": "Rules",
    "active": "Active",
    "lastTest": "Last Test",
    "lastBackup": "Last Backup",
    "channels": "Channels",
    "providers": "Providers",
    "activeUsers": "Active Users",
    "currentProvider": "Active Provider",
    "lastSync": "Last Sync",
    "databases": "Databases",
    "theme": "Theme",
    "language": "Language",
    "daysAgo": "{{days}} days ago",
    "retentionDays": "{{days}} days",
    "yesterday": "Yesterday",
    "minutesAgo": "{{minutes}} min ago",
    "themeLight": "Light",
    "languagePT": "Portuguese",
    "languageEN": "English",
    "daysText": "days ago",
    "days": "days",
    "minutesText": "min ago",
    "indexSize": "Index Size",
    "documents": "documents",
    "enabled": "Enabled",
    "neverSynced": "Never",
    "lastAlert": "Last Alert",
    "keys": "Keys",
    "active": "Active",
    "type": "Type",
    "provider": "Provider",
    "providerLocal": "Local",
    "servers": "Servers",
    "configuredServers": "Configured",
    "host": "Host",
    "port": "Port",
    "useTLS": "TLS"
  },
  "interface": {
    "saveSuccess": "Interface settings saved successfully",
    "saveError": "Error saving interface settings",
    "animations": {
      "title": "Animations",
      "description": "Enable or disable interface animations. Disabling may improve performance on older devices"
    },
    "density": {
      "title": "Density",
      "description": "Control the information density in the interface. \"Compact\" shows more information per screen, while \"Comfortable\" prioritizes readability",
      "options": {
        "compact": "Compact",
        "standard": "Standard",
        "comfortable": "Comfortable"
      }
    }
  },
  "categories": {
    "core": "Core Settings",
    "coreDescription": "Configure core system features",
    "communication": "Communication",
    "communicationDescription": "Configure email and notifications",
    "integration": "Integration",
    "integrationDescription": "Configure external integrations",
    "appearance": "Appearance",
    "appearanceDescription": "Configure interface and themes"
  },
  "sections": {
    "backup": {
      "title": "System Backup",
      "description": "Configure automatic and manual system backups"
    },
    "security": {
      "title": "Security",
      "description": "Configure security policies and access control",
      "pageDescription": "Configure system security policies including password rules, session management, and API security",
      "passwordPolicy": "Password Policy",
      "minLength": "Minimum Length",
      "minLengthHint": "Minimum number of characters for passwords",
      "expirationDays": "Expiration (days)",
      "expirationDaysHint": "Days until password expiration (0 = no expiration)",
      "historyCount": "Password History",
      "historyCountHint": "Number of previous passwords that cannot be reused",
      "requireUppercase": "Require Uppercase Letters",
      "requireLowercase": "Require Lowercase Letters",
      "requireNumbers": "Require Numbers",
      "requireSpecialChars": "Require Special Characters",
      "preventCommonPasswords": "Block Common Passwords",
      "preventCommonPasswordsHint": "Prevents the use of known and easily guessed passwords",
      "sessionPolicy": "Session Policy",
      "sessionTimeout": "Session Timeout (minutes)",
      "sessionTimeoutHint": "Inactivity time until session termination",
      "maxConcurrentSessions": "Concurrent Sessions",
      "maxConcurrentSessionsHint": "Maximum number of simultaneous sessions per user",
      "enforceIpLock": "Restrict Session to IP",
      "enforceIpLockHint": "Limits session to source IP, requiring new authentication if IP changes",
      "apiSecurity": "API Security",
      "rateLimit": "Request Limit (per minute)",
      "rateLimitHint": "Maximum number of requests per minute per IP",
      "requireHttps": "Require HTTPS",
      "requireHttpsHint": "Rejects non-secure connections (HTTP)",
      "corsEnabled": "Enable CORS",
      "allowedOrigins": "Allowed Origins",
      "allowedOriginsHint": "Comma-separated list of origins (e.g., https://example.com), or * for all"
    },
    "audit": {
      "title": "Audit",
      "description": "Configure audit logs and tracking"
    },
    "alerts": {
      "title": "Alerts",
      "description": "Configure system alerts and notifications"
    },
    "permissions": {
      "title": "Permissions",
      "description": "Configure permission management"
    },
    "smtp": {
      "title": "SMTP Configuration",
      "description": "Configure SMTP service for sending emails",
      "pageDescription": "Configure SMTP settings to allow the system to send notification emails, user invitations, and other communications.",
      "serverSettings": "Server Settings",
      "emailSettings": "Email Settings",
      "testConnection": "Test Connection",
      "testEmailTitle": "Send Test Email",
      "testEmailLabel": "Recipient Email",
      "testEmailHelp": "A test email will be sent to this address",
      "testSuccess": "Test email sent successfully!",
      "testError": "Failed to send test email",
      "testEmailRequired": "Recipient email is required",
      "sendTest": "Send Test Email",
      "systemUrlHelp": "Base URL used for links in emails",
      "logoUrlHelp": "Image URL for email headers",
      "settings": {
        "server": "SMTP Server",
        "port": "Port",
        "useTls": "Use TLS",
        "useAuth": "Requires Authentication",
        "username": "Username",
        "password": "Password",
        "fromEmail": "From Email",
        "displayName": "Display Name",
        "systemUrl": "System URL",
        "emailLogoUrl": "Logo URL",
        "useHtmlEmail": "Use HTML format (invitation template)"
      },
      "testEmailDialog": {
        "title": "Send Test Email",
        "recipient": "Recipient Email",
        "help": "A test email will be sent to this address",
        "useHtml": "Use HTML format (invitation template)",
        "send": "Send Test Email"
      },
      "errors": {
        "serverRequired": "SMTP server is required",
        "fromEmailRequired": "From email is required",
        "testEmailRequired": "Please provide an email for testing",
        "saveError": "Error saving SMTP configuration",
        "loadError": "Error loading SMTP settings",
        "testError": "Error sending test email: {{error}}"
      },
      "success": {
        "saved": "SMTP configuration saved successfully",
        "emailSent": "Test email sent successfully"
      }
    },
    "notifications": {
      "title": "Notifications",
      "description": "Configure alerts and notifications",
      "pageDescription": "Configure how the system will notify users about important events such as access requests, security alerts, and administrative activities"
    },
    "sso": {
      "title": "SSO",
      "description": "Configure Single Sign-On"
    },
    "ssoProviders": {
      "title": "SSO Settings",
      "description": "Configure Single Sign-On for enterprise authentication",
      "pageDescription": "Configure integration with identity providers to allow users to log in with their corporate credentials.",
      "enabled": "SSO Enabled",
      "enabledDescription": "Enable authentication via Single Sign-On",
      "providerSettings": "Provider Settings",
      "enabledRequired": "Enable SSO to configure provider options",
      "callbackUrlTitle": "Callback URL/Redirect URI",
      "callbackUrlDescription": "Configure this URL in your SSO provider:",
      "googleCallbackHint": "In Google Cloud Console, add this URL to \"Authorized redirect URIs\"",
      "microsoftCallbackHint": "In Azure AD, add this URL to \"Redirect URIs\" as type \"Web\"",
      "validConfiguration": "SSO configuration is valid and ready to use",
      "settings": {
        "enabled": "SSO Enabled",
        "enabledHelpText": "Enable Single Sign-On for user authentication",
        "provider": "Provider",
        "providerDescription": "Select the identity provider you want to integrate",
        "clientId": "Client ID",
        "clientIdDescription": "Client ID provided by the identity provider",
        "clientSecret": "Client Secret",
        "clientSecretDescription": "Client secret provided by the identity provider",
        "domain": "Domain",
        "domainDescription": "Allowed domain for authentication (e.g. example.com)",
        "tenantId": "Tenant ID",
        "tenantIdDescription": "Microsoft tenant ID (required only for Microsoft Entra ID)",
        "validateBeforeAccess": "Validate Access",
        "validateBeforeAccessDescription": "Validates if the user has access permission before allowing authentication"
      }
    },
    "interface": {
      "title": "Interface",
      "description": "Configure appearance and language",
      "pageDescription": "Configure user interface preferences including language, theme and display options"
    },
    "sync": {
      "title": "Database Synchronization",
      "description": "Configure database synchronization settings and policies"
    },
    "elasticsearch": {
      "title": "Elasticsearch",
      "description": "Configure Elasticsearch integration for audit log storage"
    },
    "apiKeys": {
      "title": "API Keys",
      "description": "Manage API keys for system integrations"
    },
    "secretManagers": {
      "title": "Secret Managers",
      "description": "Configure integration with AWS Secrets Manager and Azure Key Vault"
    },
    "license": {
      "title": "License Management",
      "description": "View and manage your system license"
    },
    "metrics": {
      "title": "Database Metrics",
      "description": "Configure metrics collection and monitoring for servers"
    }
  },
  "tabs": {
    "general": "General",
    "security": "Security",
    "email": "Email",
    "notifications": "Notifications",
    "databases": "Databases",
    "advanced": "Advanced",
    "authentication": "Authentication",
    "communication": "Communication",
    "audit": "Audit & Logging",
    "system": "System",
    "interface": "Interface",
    "permissions": "Permissions Management"
  },
  "elasticsearch": {
    "title": "Elasticsearch Configuration",
    "description": "Configure Elasticsearch integration for audit log storage and analysis.",
    "connectionSettings": "Connection Settings",
    "host": "Elasticsearch Host",
    "port": "Port",
    "useSSL": "Use SSL",
    "username": "Username",
    "password": "Password",
    "index": "Index",
    "indexPrefix": "Index Prefix",
    "authentication": "Authentication",
    "enableAuth": "Enable Authentication",
    "advanced": "Advanced Settings",
    "refreshInterval": "Refresh Interval (s)",
    "numberOfShards": "Number of Shards",
    "numberOfReplicas": "Number of Replicas",
    "maxBulkSize": "Max Bulk Size",
    "connectionTimeout": "Connection Timeout (ms)",
    "requestTimeout": "Request Timeout (ms)",
    "retryOnConflict": "Retry On Conflict",
    "status": "Connection Status",
    "testConnection": "Test Connection",
    "testing": "Testing...",
    "connected": "Connected",
    "disconnected": "Disconnected",
    "testSuccess": "Successfully connected to Elasticsearch!",
    "testError": "Error connecting to Elasticsearch:",
    "enabled": "Elasticsearch Enabled",
    "disabled": "Elasticsearch Disabled",
    "saveSuccess": "Elasticsearch settings saved successfully!",
    "saveError": "Error saving Elasticsearch settings",
    "fetchError": "Error loading Elasticsearch settings",
    "info": "Elasticsearch is used to store and search audit logs. Configure the connection settings below.",
    "enabledHelper": "When enabled, audit logs will be sent to Elasticsearch",
    "hostHelper": "Enter the Elasticsearch host URL (e.g., http://localhost:9200)",
    "indexName": "Index Name",
    "indexNameHelper": "Name of the Elasticsearch index to store logs",
    "usernameHelper": "Username for Elasticsearch authentication (if required)",
    "passwordHelper": "Password for Elasticsearch authentication",
    "apiKey": "API Key",
    "apiKeyHelper": "API key can be used instead of username/password",
    "verifySSL": "Verify SSL Certificates",
    "verifySSLHelper": "Enable SSL certificate verification for secure connections",
    "performance": "Performance Settings",
    "timeout": "Timeout (seconds)",
    "timeoutHelper": "Connection timeout in seconds",
    "batchSize": "Batch Size",
    "batchSizeHelper": "Number of logs to send in each batch",
    "retryCount": "Retry Count",
    "retryCountHelper": "Number of times to retry failed requests"
  },
  "audit": {
    "tabs": {
      "elasticsearch": "Elasticsearch",
      "forwarding": "Forwarding",
      "policies": "Policies",
      "alerts": "Alerts",
      "storage": "Storage"
    },
    "forwarding": {
      "title": "Audit Log Forwarding",
      "description": "Configure external destinations for forwarding audit logs. This allows you to integrate with SIEMs, log management systems, or other security monitoring tools.",
      "fetchError": "Failed to load forwarding configuration",
      "saveSuccess": "Forwarding configuration saved successfully",
      "saveError": "Failed to save forwarding configuration",
      "enableForwarding": "Enable Log Forwarding",
      "enabledDescription": "Audit logs will be forwarded to configured destinations.",
      "disabledDescription": "Audit logs will not be forwarded to external systems.",
      "destinations": "Forwarding Destinations",
      "noDestinations": "No forwarding destinations configured. Add a destination to start forwarding logs.",
      "addDestination": "Add Forwarding Destination",
      "editDestination": "Edit Forwarding Destination",
      "destinationName": "Destination Name",
      "destinationType": "Destination Type",
      "endpoint": "Endpoint",
      "format": "Format",
      "type": "Type",
      "syslogHelp": "Enter host:port for syslog server",
      "httpHelp": "Enter complete URL including https://",
      "kafkaHelp": "Enter Kafka broker and topic",
      "customHelp": "Enter custom endpoint format",
      "logFormat": "Log Format",
      "retryCount": "Retry Count",
      "retryInterval": "Retry Interval (s)",
      "httpHeaders": "HTTP Headers",
      "headersInfo": "HTTP headers can be configured through the API or config file for security reasons.",
      "enableDestination": "Enable this destination",
      "test": "Test",
      "testSuccess": "Test message sent successfully to {{name}}",
      "testError": "Failed to send test message to {{name}}"
    },
    "policies": {
      "title": "Audit Policies",
      "description": "Configure audit policies to manage log retention, event filtering, and sensitive data handling. Policies determine how audit logs are collected, stored, and processed.",
      "fetchError": "Failed to load audit policies configuration",
      "saveSuccess": "Audit policies configuration saved successfully",
      "saveError": "Failed to save audit policies configuration",
      "enablePolicies": "Enable Audit Policies",
      "enabledDescription": "Audit policies are active and will be applied to all audit logs.",
      "disabledDescription": "Audit policies are disabled. Default behavior will be applied to all logs.",
      "globalSettings": "Global Settings",
      "defaultRetention": "Default Retention Period",
      "defaultSensitiveFields": "Default Sensitive Fields",
      "addSensitiveField": "Add Sensitive Field",
      "policyList": "Audit Policies",
      "noPolicies": "No audit policies configured. Add a policy to customize audit behavior.",
      "addPolicy": "Add Audit Policy",
      "editPolicy": "Edit Audit Policy",
      "policyName": "Policy Name",
      "policyDescription": "Description",
      "retentionPeriod": "Retention Period",
      "eventTypes": "Event Types",
      "sensitiveFields": "Sensitive Fields to Mask",
      "enablePolicy": "Enable this policy",
      "retention": "Retention",
      "allEvents": "All Events",
      "info": "Audit policies determine how log data is managed, including retention periods and sensitive data handling",
      "days": "days",
      "errorMessage": "Error saving audit policy"
    },
    "alerts": {
      "title": "Audit Alerts",
      "description": "Configure alerts based on audit log events. Alerts can notify administrators via email, Slack, or webhooks when specific conditions are detected.",
      "fetchError": "Failed to load audit alerts configuration",
      "saveSuccess": "Audit alerts configuration saved successfully",
      "saveError": "Failed to save audit alerts configuration",
      "enableAlerts": "Enable Audit Alerts",
      "enabledDescription": "Audit alerts are active and will be sent when conditions are met.",
      "disabledDescription": "Audit alerts are disabled. No notifications will be sent.",
      "globalSettings": "Global Alert Settings",
      "defaultRecipients": "Default Alert Recipients",
      "addRecipient": "Add Recipient",
      "globalWebhook": "Global Webhook URL",
      "globalWebhookHelp": "Optional global webhook URL for all alerts",
      "alertsList": "Configured Alerts",
      "noAlerts": "No alerts configured. Add an alert to start getting notifications.",
      "addAlert": "Add Alert",
      "editAlert": "Edit Alert",
      "alertName": "Alert Name",
      "alertDescription": "Description",
      "severity": "Severity",
      "eventType": "Event Type",
      "notifications": "Notifications",
      "condition": "Alert Condition",
      "conditionHelp": "Enter a condition that triggers this alert",
      "predefinedConditions": "Predefined Conditions",
      "notificationChannels": "Notification Channels",
      "emailRecipients": "Email Recipients",
      "webhookUrl": "Webhook URL",
      "webhookHelp": "URL that will receive webhook notifications",
      "throttlingPeriod": "Throttling Period (minutes)",
      "throttlingHelp": "Minimum time between alert notifications (0 = no throttling)",
      "enableAlert": "Enable this alert",
      "name": "Name",
      "severityLow": "Low",
      "severityMedium": "Medium",
      "severityHigh": "High",
      "severityCritical": "Critical",
      "channelEmail": "Email",
      "channelSlack": "Slack",
      "channelWebhook": "Webhook",
      "info": "Audit alerts notify administrators when specific events or patterns are detected",
      "testAlert": "Test Alert",
      "testAlertSuccess": "Test alert sent successfully",
      "testAlertError": "Failed to send test alert"
    },
    "settings": {
      "title": "Audit Settings",
      "description": "Configure audit logging settings including collection, storage, and retention",
      "tabs": {
        "general": "General",
        "elasticsearch": "Elasticsearch",
        "forwarding": "Forwarding",
        "policies": "Policies",
        "alerts": "Alerts",
        "storage": "Storage"
      },
      "saveSuccess": "Audit settings saved successfully",
      "saveError": "Failed to save audit settings",
      "enabled": "Enable Audit Logging",
      "enabledDescription": "Audit logging is active and will record system activities",
      "disabledDescription": "Audit logging is disabled. No system activities will be recorded"
    }
  },
  "general": {
    "title": "General Settings",
    "language": {
      "title": "Localization Settings",
      "description": "Configure the default language and other localization options",
      "current": "Current Language",
      "defaultDescription": "The default language used by the system when the user's language cannot be automatically determined",
      "options": {
        "en": "English",
        "pt": "Portuguese",
        "defaultLanguage": "Default Language"
      }
    },
    "theme": {
      "title": "Theme",
      "description": "Choose the visual theme for the user interface. The \"System\" theme follows your operating system preferences",
      "options": {
        "light": "Light",
        "dark": "Dark",
        "system": "System"
      }
    }
  },
  "security": {
    "title": "Security Settings",
    "twoFA": {
      "title": "Two-Factor Authentication",
      "description": "Require two-factor authentication for all users",
      "enabled": "Enabled",
      "disabled": "Disabled"
    },
    "sso": {
      "title": "Single Sign-On",
      "description": "Configure SSO for enterprise authentication",
      "enabled": "Enabled",
      "disabled": "Disabled",
      "provider": "Provider",
      "providers": {
        "google": "Google",
        "azure": "Azure AD",
        "okta": "Okta",
        "keycloak": "Keycloak"
      },
      "clientId": "Client ID",
      "clientSecret": "Client Secret",
      "domain": "Domain",
      "tenantId": "Tenant ID",
      "validateBeforeAccess": "Validate Before Access",
      "testConnection": "Test Connection",
      "connectionSuccess": "Connection successful!",
      "connectionFailed": "Connection failed"
    },
    "cors": {
      "title": "Cross-Origin Resource Sharing (CORS)",
      "description": "Disable CORS restrictions for development purposes",
      "disabled": "Disabled",
      "enabled": "Enabled",
      "warning": "Warning: Disabling CORS restrictions may present security risks"
    }
  },
  "email": {
    "title": "Email Settings",
    "enabled": "Email Notifications Enabled",
    "server": "SMTP Server",
    "port": "SMTP Port",
    "useTLS": "Use TLS",
    "useAuth": "Use Authentication",
    "username": "Username",
    "password": "Password",
    "fromEmail": "From Email",
    "displayName": "Display Name",
    "systemUrl": "System URL",
    "emailLogoUrl": "Email Logo URL",
    "testEmail": "Test Email",
    "sendTest": "Send Test Email",
    "testEmailSent": "Test email sent successfully!",
    "testEmailFailed": "Failed to send test email",
    "testRecipient": "Test Recipient Email",
    "useHTMLTemplate": "Use HTML Template"
  },
  "notifications": {
    "title": "Notification Settings",
    "email": {
      "title": "Email Notifications",
      "description": "Send email notifications for important events",
      "enabled": "Enabled",
      "disabled": "Disabled"
    },
    "slack": {
      "title": "Slack Notifications",
      "description": "Send notifications to a Slack channel",
      "enabled": "Enable Slack notifications",
      "disabled": "Disabled",
      "apiKey": "Slack API Key",
      "apiKeyHelper": "Slack API token for sending messages",
      "channel": "Slack Channel",
      "channelHelper": "Slack channel name (e.g. #alerts)",
      "test": "Test Slack Integration",
      "testDialog": {
        "title": "Send Test Message to Slack",
        "message": "A test message will be sent to the {{channel}} channel on Slack using the configured API key.",
        "help": "This operation helps verify that your Slack API credentials are working correctly.",
        "send": "Send Test Message"
      }
    },
    "allDisabled": "All notifications are disabled. Users will not receive alerts about important system actions.",
    "email": {
      "title": "Email Settings",
      "enabled": "Enable email notifications",
      "description": "Send email notifications for access requests, security alerts and other important information.",
      "enabledInfo": "Email notifications are enabled. Make sure SMTP configuration is also correct."
    }
  },
  "databases": {
    "title": "Database Settings",
    "connectionPooling": {
      "title": "Connection Pooling",
      "description": "Enable connection pooling for better performance",
      "enabled": "Enabled",
      "disabled": "Disabled"
    },
    "maxConnections": "Maximum Connections",
    "queryTimeout": "Query Timeout (seconds)"
  },
  "advanced": {
    "title": "Advanced Settings",
    "logRetention": {
      "title": "Log Retention",
      "description": "Number of days to retain log data",
      "days": "Days"
    },
    "proxySettings": {
      "title": "Proxy Settings",
      "description": "Configure the database proxy",
      "enabled": "Enabled",
      "disabled": "Disabled",
      "port": "Proxy Port"
    }
  },
  "saveSuccess": "Settings saved successfully!",
  "saveError": "Failed to save settings",
  "helpTexts": {
    "ssoProviders": {
      "provider": "Select the type of SSO provider you want to configure. Each provider requires specific settings.",
      "clientId": "The Client ID provided by the SSO provider. You can obtain it from the provider's developer console.",
      "clientSecret": "The Client Secret provided by the SSO provider. Keep this value secure and do not share it.",
      "domain": "Your organization's domain (e.g. company.com). Used to restrict login to users from your domain only.",
      "tenantId": "Specific to Microsoft Entra ID. The ID of your tenant (directory) in the Microsoft platform.",
      "validateBeforeAccess": "When enabled, verifies the authenticity of the user token before each access to the application, providing additional security."
    }
  },
  "backup": {
    "title": "System Backup",
    "description": "Configure automatic and manual system backups",
    "configuration": "Backup Configuration",
    "status": "Backup Status",
    "history": "Backup History",
    "fetchError": "Failed to load backup configuration",
    "saveSuccess": "Backup configuration saved successfully",
    "saveError": "Failed to save backup configuration",
    "startSuccess": "Backup started successfully",
    "startError": "Failed to start backup",
    "configNotFound": "Backup configuration not found",
    "enableAutoBackup": "Enable Automatic Backups",
    "schedule": "Schedule (Cron Expression)",
    "scheduleHelp": "Use cron format: 0 2 * * * (daily at 2 AM)",
    "type": "Backup Type",
    "typeFull": "Full Backup",
    "typeIncremental": "Incremental Backup",
    "typeDifferential": "Differential Backup",
    "typeManual": "Manual",
    "typeScheduled": "Scheduled",
    "retentionDays": "Retention Days",
    "storagePath": "Storage Path",
    "notificationEmail": "Notification Email",
    "notificationEmailHelp": "Email address to receive backup notifications",
    "components": "Components to Include",
    "includeUserData": "Database & User Data",
    "includeAuditLogs": "Audit Logs",
    "includeConfigurations": "System Configurations",
    "runNow": "Run Backup Now",
    "runManualBackup": "Run Manual Backup",
    "selectComponents": "Select components to include in the backup:",
    "startBackup": "Start Backup",
    "lastBackupSuccess": "Last backup completed {{time}}",
    "noRecentBackup": "No recent backups found",
    "size": "Size",
    "date": "Date",
    "duration": "Duration",
    "download": "Download",
    "statusRunning": "Running",
    "statusCompleted": "Completed",
    "statusFailed": "Failed",
    "noHistory": "No backup history available",
    "downloadError": "Failed to download backup file",
    "uploadBackup": "Upload Backup",
    "restore": "Restore",
    "restoreSystem": "Restore System",
    "uploadWarning": "Warning: Only upload backup files from trusted sources. Malicious files could compromise your system.",
    "selectFile": "Select backup file",
    "fileSize": "File size",
    "uploading": "Uploading...",
    "upload": "Upload",
    "restoreWarning": "Warning: Restoring a backup will overwrite current data. This action cannot be undone!",
    "selectComponentsToRestore": "Select components to restore:",
    "safetyBackupNote": "Note: A safety backup will be created automatically before restoration.",
    "confirmRestore": "Confirm Restore",
    "restoring": "Restoring...",
    "uploadSuccess": "Backup uploaded successfully",
    "uploadError": "Failed to upload backup",
    "restoreStarted": "Restore process started. Check history for progress.",
    "restoreError": "Failed to start restore process",
    "includeDatabase": "Include Database",
    "includeAuditLogs": "Include Audit Logs",
    "includeConfigurations": "Include Configurations",
    "selectFileError": "Please select a backup file",
    "s3Configuration": "S3 Configuration",
    "enableS3Backup": "Enable S3 Backup",
    "s3BucketName": "S3 Bucket Name",
    "s3BucketNameHelp": "e.g., my-backup-bucket",
    "s3Region": "AWS Region",
    "s3RegionHelp": "e.g., us-east-1",
    "selectRegion": "Select a region",
    "s3AccessKeyId": "Access Key ID",
    "s3SecretAccessKey": "Secret Access Key",
    "s3StorageClass": "Storage Class",
    "s3StorageClassStandard": "Standard",
    "s3StorageClassIA": "Standard-IA (Infrequent Access)",
    "s3StorageClassGlacier": "Glacier",
    "s3Prefix": "S3 Prefix (Folder)",
    "s3PrefixHelp": "Folder path in the bucket",
    "s3EnableVersioning": "Enable S3 Versioning",
    "s3EnableEncryption": "Enable S3 Encryption",
    "testS3Connection": "Test S3 Connection",
    "s3ConnectionSuccess": "S3 connection successful!",
    "s3ConnectionError": "Failed to connect to S3"
  },
  "apiKeys": {
    "title": "API Keys",
    "pageDescription": "Create and manage API keys to allow external applications to securely access the system",
    "listTitle": "Registered Keys",
    "createButton": "Create API Key",
    "info": "API keys allow external applications to authenticate with the system. Keep your API keys secure and never share them publicly.",
    "error": {
      "fetchFailed": "Failed to load API keys",
      "createFailed": "Failed to create API key",
      "updateFailed": "Failed to update API key",
      "deleteFailed": "Failed to delete API key"
    },
    "success": {
      "created": "API key created successfully",
      "updated": "API key updated successfully",
      "deleted": "API key deleted successfully"
    },
    "table": {
      "name": "Name",
      "description": "Description",
      "permissions": "Permissions",
      "lastUsed": "Last Used",
      "expiresAt": "Expires",
      "status": "Status",
      "usage": "Usage"
    },
    "noKeys": "No API keys configured",
    "viewStats": "View statistics",
    "createTitle": "Create New API Key",
    "editTitle": "Edit API Key",
    "deleteTitle": "Delete API Key",
    "deleteConfirm": "Are you sure you want to delete the API key \"{{name}}\"? This action cannot be undone.",
    "form": {
      "name": "API Key Name",
      "description": "Description",
      "permissions": "Permissions",
      "expiresAt": "Expiration Date",
      "ipWhitelist": "IP Whitelist",
      "ipWhitelistHelp": "Comma-separated list of allowed IP addresses (leave empty for no restriction)",
      "isActive": "Active"
    },
    "keyCreated": "API Key Created",
    "keyWarning": "This is the only time you will see this API key. Copy it now and store it securely.",
    "keyCopied": "API key copied to clipboard",
    "stats": {
      "title": "API Key Usage Statistics - {{name}}",
      "byEndpoint": "By Endpoint",
      "byDate": "By Date",
      "requests": "requests",
      "noData": "No usage data available for this API key",
      "totalRequests": "Total Requests",
      "uniqueEndpoints": "Unique Endpoints",
      "period": "Period",
      "last30Days": "Last 30 days"
    }
  },
  "license": {
    "title": "License Management",
    "description": "View and manage your system license",
    "noLicense": "No License Installed",
    "trialDescription": "You are currently using the trial version. Request a trial license or upload a license to unlock all features.",
    "trialMode": "Trial Mode",
    "uploadLicense": "Upload License",
    "requestTrial": "Request Trial License",
    "requestTrialTitle": "Request Trial License",
    "trialFormDescription": "Fill out the form below to request a 15-day trial license to evaluate DB-Manager.",
    "contactInfo": "Contact Information",
    "contactName": "Contact Name",
    "companyName": "Company Name",
    "email": "Email",
    "phone": "Mobile Phone",
    "country": "Country",
    "taxId": "Tax ID",
    "companyInfo": "Company Information",
    "employeeCount": "Number of Employees",
    "databaseCount": "Number of Databases",
    "submitTrialRequest": "Submit Request",
    "updateLicense": "Update License",
    "uploadLicenseTitle": "Upload License File",
    "uploadDescription": "Select a license file or paste the license key below.",
    "selectFile": "Select License File",
    "licenseKey": "License Key",
    "pasteLicense": "Paste your license key here...",
    "licenseId": "License ID",
    "customerId": "Customer ID",
    "issuedAt": "Issued Date",
    "expiresAt": "Expiration Date",
    "maxServers": "Maximum Servers",
    "maxUsers": "Maximum Users",
    "features": "Features",
    "unlimited": "Unlimited",
    "status": "License Status",
    "valid": "Valid ({{days}} days remaining)",
    "expired": "License Expired",
    "expiringSoon": "Expiring soon ({{days}} days)",
    "expiringWarning": "Expires in {{days}} days",
    "deleteLicense": "Delete License",
    "deleteConfirmTitle": "Delete License?",
    "deleteConfirmMessage": "Are you sure you want to delete the current license? The system will revert to trial mode.",
    "ntpError": "NTP Validation Required"
  },
  "errors": {
    "fetchLicense": "Failed to fetch license information",
    "uploadLicense": "Failed to upload license",
    "deleteLicense": "Failed to delete license",
    "emptyLicense": "Please provide a license key",
    "fieldRequired": "This field is required",
    "invalidEmail": "Invalid email",
    "trialRequest": "Error requesting trial license"
  },
  "success": {
    "licenseUploaded": "License uploaded successfully",
    "licenseDeleted": "License deleted successfully",
    "trialRequested": "Trial license request sent successfully! You will receive an email with instructions."
  },
  "format": "Format",
  "secretManagers": {
    "title": "Secret Managers",
    "description": "Configure integration with secret managers for secure credential storage",
    "pageDescription": "Configure AWS Secrets Manager or Azure Key Vault to securely store service user credentials, ideal for CI/CD environments",
    "enable": "Enable Secret Managers",
    "info": "Credentials will be securely stored in the selected provider instead of the local database",
    "saveSuccess": "Configuration saved successfully",
    "saveError": "Error saving configuration",
    "testSuccess": "Connection tested successfully",
    "testError": "Error testing connection",
    "aws": {
      "region": "AWS Region",
      "regionHelp": "e.g. us-east-1, eu-west-1",
      "prefix": "Secrets Prefix",
      "prefixHelp": "Prefix to organize secrets (e.g. dbmanager/service-users)",
      "authInfo": "Leave blank to use IAM Role. Fill only if using specific credentials.",
      "accessKeyId": "Access Key ID",
      "accessKeyIdHelp": "Optional - leave blank to use IAM role",
      "secretAccessKey": "Secret Access Key",
      "secretAccessKeyHelp": "Optional - leave blank to use IAM role",
      "roleArn": "Role ARN",
      "roleArnHelp": "Optional - ARN of the role to assume (e.g. arn:aws:iam::123456789012:role/MyRole)"
    },
    "azure": {
      "tenantId": "Tenant ID",
      "tenantIdHelp": "Azure Active Directory tenant ID",
      "keyVaultName": "Key Vault Name",
      "keyVaultNameHelp": "Azure Key Vault name (without the full URL)",
      "useMsi": "Use Managed Identity",
      "clientId": "Client ID",
      "clientIdHelp": "Application ID registered in Azure AD",
      "clientSecret": "Client Secret",
      "clientSecretHelp": "Application secret registered in Azure AD",
      "subscriptionId": "Subscription ID",
      "subscriptionIdHelp": "Optional - Azure subscription ID"
    }
  }
}